---------------------------Factor Graph----------------------------

class Hypergraph
 + V : set
 + E : set "05.06: changed from nested set to a set"
 + att : dict
 + labV : dict
 + labE : dict
 + connect(v : any) -> set
 + add_edge() -> bool "05.06: proposal to return nothing"
 + add_vertex() -> bool "05.06: proposal to return nothing"
 + map_edge()  "05.06: newly added"
 + label_edge()  "05.06: newly added"
 + label_vertex()  "05.06: newly added"
 + draw() "20.06: newly added"
 + visualize() "20.06: newly added"
 + draw() "20.06: newly added"

class Hypergraph fragment(Hypergraph)
 + external : dict
 + nonterminals(nts) : set "20.06: newly addded"

class Factor graphs(Hypergraph)
 + omega : dict
 + phi : dict
 + sum_product()

-------------------------------FGG---------------------------------

class FGG
 + T : set
 + N : set
 + S : string
 + P : dict
 + recursive() -> bool
 + linearly_recursive() -> bool
 + reentrant() -> bool
 + conjunction(fgg : FGG) -> FGG
 + add(head, body) -> bool
 + copy() -> FGG
 + print() -> string
 + size() -> number
 + P() -> Generator


class FGGsum_product
 + fgg : FGG
 + inference() -> number
 + inference_finite_variables() -> number
 + inference_finite_states() -> number
